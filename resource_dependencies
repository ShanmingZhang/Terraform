* Terraform configurations can contain multiple type resources,these types might be multiple providers
* How to reference the attributes of other resources to configure subsequent resources

* Interpolation expressions (dependency information)
  - Terraform makes execution plan and decides the correct order of resources based on interpolation expressions
  - Terraform can automatically infer when one resource depends on another
  
* Implicit dependencies
  - via interpolation expressions are the primary way to inform Terraform about these relationships, and should be used whenever possible.
        ----------------------------------------
        resource "aws_eip" "ip" {
            vpc = true
            instance = aws_instance.example.id
        }
        ----------------------------------------
        
* Explicit dependencies
  - there are dependencies between resources that are not visible to Terraform
      such as an application will run on EC2 instance expects to use a specific Amazon S3 bucket, but that dependency is configured inside
      the application code and thus not visible to Terraform
       -----------------------------------------------------------------------------------------
          # New resource for the S3 bucket our application will use.
          resource "aws_s3_bucket" "example" {
            # NOTE: S3 bucket names must be unique across _all_ AWS accounts, so
            # this name must be changed before applying this example to avoid naming
            # conflicts.
            bucket = "terraform-getting-started-guide"
            acl    = "private"
          }

          # Change the aws_instance we declared earlier to now include "depends_on"
          resource "aws_instance" "example" {
            ami           = "ami-2757f631"
            instance_type = "t2.micro"

            # Tells Terraform that this EC2 instance must be created only after the
            # S3 bucket has been created.
            depends_on = [aws_s3_bucket.example]
          }
      
       -----------------------------------------------------------------------------------------
  - 'depends_on' to explicitly declare the dependency
* Non-Dependent resources does not depend on any other resource, they can be created in parallel with the other resources.
* Terraform can perform operations concurrently to reduce the total time taken to apply changes


Command and key points
 - Implicit dependencies
    -- example:
         instance = aws_instance.example.id
 - Explicit dependencies 
    -- example:
         depends_on = [aws_s3_bucket.example]
